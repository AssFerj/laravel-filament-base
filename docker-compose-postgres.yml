services:
    # image project
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: php:8.3-fpm
        container_name: app
        restart: unless-stopped
        tty: true
        environment:
            - APP_ENV=${APP_ENV}
            - APP_DEBUG=${APP_DEBUG}
            - APP_KEY=${APP_KEY}
            - DB_CONNECTION=${DB_CONNECTION}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - DB_DATABASE=${DB_DATABASE}
            - DB_USERNAME=${DB_USERNAME}
            - DB_PASSWORD=${DB_PASSWORD}
        working_dir: /var/www/
        volumes:
            - ./:/var/www
            - ./docker/php/custom.ini:/etc/php/custom.ini
        ports:
            - "9000:9000"
        networks:
            - laravel-cms

    # nginx
    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        tty: true
        ports:
            - "8080:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
        networks:
            - laravel-cms

    # db postgres
    db:
        platform: linux/x86_64
        image: postgres:latest
        container_name: db
        restart: unless-stopped
        tty: true
        user: "${UID}:${GID}"
        environment:
            POSTGRES_DB: ${DB_DATABASE:-cms}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-root}
            POSTGRES_USER: ${DB_USERNAME:-root}
        ports:
            - "5432:5432"
        volumes:
            - ./:/var/www
            - ./docker/dbdata:/var/lib/postgresql/data
        networks:
            - laravel-cms

    # Adminer
    adminer:
        image: adminer
        container_name: adminer
        restart: unless-stopped
        ports:
            - "8081:8080"
        environment:
            ADMINER_DEFAULT_SERVER: db
        networks:
            - laravel-cms

networks:
    laravel-cms:
        driver: bridge
